EDA(Exploratory Data Analysis)
# Importing Necessary Libraries
​
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
Read the data
df=pd.read_csv("C:\\Users\\ayush\\Downloads\\k_circle_sales (2).csv")
df.head(10)
Item_Identifier	Item_Weight	Item_Fat_Content	Item_Visibility	Item_Type	Item_MRP	Outlet_Identifier	Outlet_Establishment_Year	Outlet_Size	Outlet_Location_Type	Outlet_Type	Item_Outlet_Sales	Profit
0	FDA15	9.300	Low Fat	0.016047	Dairy	249.8	OUT049	1999	Medium	Tier 2	Supermarket Type1	3735.1380	11.5
1	DRC01	5.920	Regular	0.019278	Soft Drinks	48.3	OUT018	2009	Medium	Tier 2	Supermarket Type2	443.4228	14.3
2	FDN15	17.500	Low Fat	0.016760	Meat	141.6	OUT049	1999	Medium	Tier 2	Supermarket Type1	2097.2700	14.5
3	FDX07	19.200	Regular	0.000000	Fruits and Vegetables	182.1	OUT010	1998	NaN	NaN	Grocery Store	732.3800	13.6
4	NCD19	8.930	Low Fat	0.000000	Household	53.9	OUT013	1987	High	Tier 3	Supermarket Type1	994.7052	14.1
5	FDP36	10.395	Regular	0.000000	Baking Goods	51.4	OUT018	2009	Medium	Tier 2	Supermarket Type2	556.6088	9.5
6	FDO10	13.650	Regular	0.012741	Snack Foods	57.7	OUT013	1987	High	Tier 3	Supermarket Type1	343.5528	8.8
7	FDP10	NaN	Low Fat	0.127470	Snack Foods	107.8	OUT027	1985	Medium	Tier 2	Supermarket Type3	4022.7636	13.3
8	FDH17	16.200	Regular	0.016687	Frozen Foods	97.0	OUT045	2002	NaN	NaN	Supermarket Type1	1076.5986	13.0
9	FDU28	19.200	Regular	0.094450	Frozen Foods	187.8	OUT017	2007	NaN	--	Supermarket Type1	4710.5350	13.6
df.shape
(8523, 13)
df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8523 entries, 0 to 8522
Data columns (total 13 columns):
 #   Column                     Non-Null Count  Dtype  
---  ------                     --------------  -----  
 0   Item_Identifier            8523 non-null   object 
 1   Item_Weight                7774 non-null   float64
 2   Item_Fat_Content           8523 non-null   object 
 3   Item_Visibility            8523 non-null   float64
 4   Item_Type                  8523 non-null   object 
 5   Item_MRP                   8523 non-null   float64
 6   Outlet_Identifier          8523 non-null   object 
 7   Outlet_Establishment_Year  8523 non-null   int64  
 8   Outlet_Size                6113 non-null   object 
 9   Outlet_Location_Type       6473 non-null   object 
 10  Outlet_Type                8523 non-null   object 
 11  Item_Outlet_Sales          8523 non-null   float64
 12  Profit                     8523 non-null   float64
dtypes: float64(5), int64(1), object(7)
memory usage: 865.7+ KB
Measures of Central Tendency
Mean
df['Item_Weight'].mean()
11.676739773604321
Median
df['Item_Weight'].median()
11.8
Mode
df['Item_Fat_Content'].mode()
0    Low Fat
Name: Item_Fat_Content, dtype: object
df['Item_Fat_Content'].mode()[0]
'Low Fat'
df['Item_Fat_Content'].value_counts()
Item_Fat_Content
Low Fat    5089
Regular    2889
LF          316
reg         117
low fat     112
Name: count, dtype: int64
Range
df.head()
Item_Identifier	Item_Weight	Item_Fat_Content	Item_Visibility	Item_Type	Item_MRP	Outlet_Identifier	Outlet_Establishment_Year	Outlet_Size	Outlet_Location_Type	Outlet_Type	Item_Outlet_Sales	Profit
0	FDA15	9.30	Low Fat	0.016047	Dairy	249.8	OUT049	1999	Medium	Tier 2	Supermarket Type1	3735.1380	11.5
1	DRC01	5.92	Regular	0.019278	Soft Drinks	48.3	OUT018	2009	Medium	Tier 2	Supermarket Type2	443.4228	14.3
2	FDN15	17.50	Low Fat	0.016760	Meat	141.6	OUT049	1999	Medium	Tier 2	Supermarket Type1	2097.2700	14.5
3	FDX07	19.20	Regular	0.000000	Fruits and Vegetables	182.1	OUT010	1998	NaN	NaN	Grocery Store	732.3800	13.6
4	NCD19	8.93	Low Fat	0.000000	Household	53.9	OUT013	1987	High	Tier 3	Supermarket Type1	994.7052	14.1
​
df['Item_MRP'].max()-df['Item_MRP'].min()
235.59999999999997
Interquartile Range (IQR)
df['Item_MRP'].quantile(0.75)-df['Item_MRP'].quantile(0.25)
91.84999999999998
Variance
df['Item_MRP'].var()
3876.0708845928852
Standard Deviation
df['Item_MRP'].std()
62.2580989477906
Coefficient of Variation
print('coefficient of variation:',df['Item_MRP'].std()/df['Item_MRP'].mean())
print('% of variation:',df['Item_MRP'].std()/df['Item_MRP'].mean()*100)
coefficient of variation: 0.4415504385557985
% of variation: 44.15504385557985
Describe
df.describe(include='all')
Item_Identifier	Item_Weight	Item_Fat_Content	Item_Visibility	Item_Type	Item_MRP	Outlet_Identifier	Outlet_Establishment_Year	Outlet_Size	Outlet_Location_Type	Outlet_Type	Item_Outlet_Sales	Profit
count	8523	7774.000000	8523	8523.000000	8523	8523.000000	8523	8523.000000	6113	6473	8523	8523.000000	8523.000000
unique	1559	NaN	5	NaN	16	NaN	10	NaN	3	8	4	NaN	NaN
top	FDW13	NaN	Low Fat	NaN	Fruits and Vegetables	NaN	OUT027	NaN	Medium	Tier 2	Supermarket Type1	NaN	NaN
freq	10	NaN	5089	NaN	1232	NaN	935	NaN	2793	2793	5577	NaN	NaN
mean	NaN	11.676740	NaN	0.066132	NaN	140.998838	NaN	1997.831867	NaN	NaN	NaN	2181.288914	13.414514
std	NaN	5.776851	NaN	0.051598	NaN	62.258099	NaN	8.371760	NaN	NaN	NaN	1706.499616	1.701840
min	NaN	0.000000	NaN	0.000000	NaN	31.300000	NaN	1985.000000	NaN	NaN	NaN	33.290000	0.100000
25%	NaN	7.720000	NaN	0.026989	NaN	93.800000	NaN	1987.000000	NaN	NaN	NaN	834.247400	13.150000
50%	NaN	11.800000	NaN	0.053931	NaN	142.700000	NaN	1999.000000	NaN	NaN	NaN	1794.331000	13.900000
75%	NaN	16.500000	NaN	0.094585	NaN	185.650000	NaN	2004.000000	NaN	NaN	NaN	3101.296400	14.300000
max	NaN	21.350000	NaN	0.328391	NaN	266.900000	NaN	2009.000000	NaN	NaN	NaN	13086.964800	24.000000
df['Item_MRP'].describe()
​
​
count    8523.000000
mean      140.998838
std        62.258099
min        31.300000
25%        93.800000
50%       142.700000
75%       185.650000
max       266.900000
Name: Item_MRP, dtype: float64
check the missing value
print("\nMissing values in each column:")
print(df.isnull().sum())

Missing values in each column:
Item_Identifier                 0
Item_Weight                   749
Item_Fat_Content                0
Item_Visibility                 0
Item_Type                       0
Item_MRP                        0
Outlet_Identifier               0
Outlet_Establishment_Year       0
Outlet_Size                  2410
Outlet_Location_Type         2050
Outlet_Type                     0
Item_Outlet_Sales               0
Profit                          0
dtype: int64
Distribution of data
plt.figure(figsize=(10,6))
sns.histplot(df['Item_MRP'], kde=True, bins=30)
plt.title('Distribution of Item ')
plt.xlabel('Item_MRP')
plt.ylabel('Item_Type')
plt.show()

df.hist(bins=20, figsize=(10,8))
plt.title("Histogram of items")
plt.show()

Box plot
plt.figure(figsize=(10,6))
sns.boxplot(data=df)
plt.title('Box plot of Item')
plt.show()

plt.figure(figsize=(12,8))
sns.pairplot(df)
plt.show()
C:\Users\ayush\anaconda3\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)
<Figure size 1200x800 with 0 Axes>

Skewness
It helps us to study the shape of the data.

df['Item_MRP'].skew()
0.12738985338612047
kurtosis
it measures the peakedness of the distribution

df['Item_MRP'].kurt()
-0.8879008549272447
Explanation of the Project
- Importing the libraries and then loading the data set. after loading the dataset's we explore the dataset's shape and info.
After this we find the Measures of central Tendency, in which we find the mean, median and mode. And then we find the IQR (Interquartile range), variance, Standard deviation , coefficient of variation.
And then describe the data set's.we Check the missing value and then distribution of data is done in which histogram, boxplot and pairplot is plot.
And i also find skewness which helps us to study the shape of the data and kurtosis measures the peakedness of the distribution.
​
